{
  "name": "cakephp/app",
  "description": "CakePHP skeleton app",
  "homepage": "https://cakephp.org",
  "type": "project",
  "license": "MIT",
  "repositories": [
    {
      "type": "vcs",
      "url": "https://github.com/TLC-Tech/cakephp-cors"
    }
  ],
  "require": {
    "php": ">=7.4",
    "cakephp/cakephp": "^4.4",
    "mobiledetect/mobiledetectlib": "2.*",
    "cakephp/migrations": "~3.0.0",
    "cakephp/plugin-installer": "~1.0",
    "josegonzalez/dotenv": "2.*",
    "maiconpinto/cakephp-adminlte-theme": "^2.0",
    "aws/aws-sdk-php": "^3.40",
    "phpoffice/phpspreadsheet": "~1.23",
    "php-ffmpeg/php-ffmpeg": "^0.11.1",
    "ext-json": "*",
    "ext-curl": "*",
    "ext-iconv": "*",
    "cakephp/authentication": "^2.4",
    "firebase/php-jwt": "^6.4",
    "cakephp/authorization": "^2.0",
    "ozee31/cakephp-cors": "v2.0.1",
    "gumlet/php-image-resize": "^2.0"
  },
  "require-dev": {
    "psy/psysh": "@stable",
    "cakephp/debug_kit": "~4.0",
    "cakephp/bake": "~2.0.0",
    "squizlabs/php_codesniffer": "^3.0",
    "phpunit/phpunit": "^8.0",
    "brainmaestro/composer-git-hooks": "^2.8",
    "phpstan/phpstan": "^1.12",
    "cakedc/cakephp-phpstan": "^2.0"
  },
  "suggest": {
    "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
    "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan compatibility.",
    "phpunit/phpunit": "Allows automated tests to be run without system-wide install.",
    "cakephp/cakephp-codesniffer": "Allows to check the code against the coding standards used in CakePHP."
  },
  "autoload": {
    "psr-4": {
      "App\\": "src"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "App\\Test\\": "tests",
      "Cake\\Test\\": "./vendor/cakephp/cakephp/tests"
    }
  },
  "scripts": {
    "check": [
      "@test",
      "@cs-check"
    ],
    "cs-check": "./vendor/bin/phpcs --colors --standard=PSR12 --ignore='./src/Model/Entity' ./templates ./src ./config ./tests/TestCase",
    "cs-fix": "./vendor/bin/phpcbf --colors --standard=PSR12 --ignore='./src/Model/Entity' ./templates ./src ./config ./tests/TestCase",
    "test": "./vendor/bin/phpunit --colors=always --exclude-group=ignore",
    "test-testdox": "./vendor/bin/phpunit --colors=always --testdox --exclude-group=ignore",
    "cghooks": "./vendor/bin/cghooks"
  },
  "prefer-stable": true,
  "config": {
    "allow-plugins": {
      "cakephp/plugin-installer": true,
      "brainmaestro/composer-git-hooks": true
    }
  },
  "extra": {
    "hooks": {
      "config": {
        "stop-on-failure": [
          "pre-commit"
        ]
      },
      "pre-commit": [
        "echo '\nBefore you can commit your code, let us make sure the code adheres to PSR12 style.'",
        "echo 'If any errors or warnings are found, your code will not be commited.'",
        "echo 'Please fix any errors and warnings before committing. Refer to the report for help.\n'",
        "composer run-script cs-check",
        "checkStatus=$?",
        "if [ $checkStatus != 0 ]; then exit 1; fi;",
        "echo '\nCode adheres to PSR12 standard!\n'",
        "echo 'Now let us make sure all the unit tests succeed.\n'",
        "composer run test",
        "if [ $? != 0 ]; then exit 1; fi;"
      ]
    }
  }
}
